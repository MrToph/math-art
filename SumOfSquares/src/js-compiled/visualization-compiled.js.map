{"version":3,"sources":["../js/visualization.jsx"],"names":[],"mappings":"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","file":"visualization-compiled.js","sourcesContent":["class Visualization extends ISteppable{\r\n    constructor(element) {\r\n        super();\r\n\r\n        this.squareSize = 100;\r\n\r\n        this.colors = [\"#ff3232\", \"#32CD32\", \"#3232ff\", \"#ffa500\"];\r\n        this.currentStep = 0;\r\n        this.maxStep = 8;\r\n        this.init(element);\r\n    }\r\n\r\n    init(element){\r\n        this.scene = new THREE.Scene();\r\n        // renderer\r\n        this.renderer = new THREE.WebGLRenderer();\r\n        this.renderer.setClearColor( 0xffffff );\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight, false);\r\n\r\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 1, 10000);\r\n        let pos = new THREE.Vector3(500, 750, 500);\r\n        this.camera.position.set(pos.x, pos.y, pos.z);\r\n\r\n        // init controls\r\n        this.controls = new THREE.OrbitControls( this.camera, element );// new THREE.TrackballControls( this.camera );\r\n        // this.controls.rotateSpeed = 8.0;\r\n        // this.controls.zoomSpeed = 1.2;\r\n        // this.controls.panSpeed = 0.8;  // not sure what this is for\r\n        this.controls.enableZoom = true;\r\n        this.controls.enablePan = true;  // right mouse => translates\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.3;\r\n        this.controls.keys = [ 65, 83, 68 ]; // a, s, d\r\n        this.controls.addEventListener( 'change', this.render.bind(this) );\r\n\r\n        // document.body.insertBefore(this.renderer.domElement, $(\"#mathContainer\").get(0).nextSibling);\r\n        element.appendChild(this.renderer.domElement);\r\n\r\n        this.cubeGeometry = new THREE.BoxGeometry(this.squareSize, this.squareSize, this.squareSize);\r\n        this.materials = [];\r\n        for(let i = 0; i < this.colors.length; i++){\r\n            var material = new THREE.MeshBasicMaterial({color: this.colors[i], wireframe: false,\r\n                polygonOffset: true, polygonOffsetFactor: 1.0, polygonOffsetUnits: 5.0});   // needed to make EdgesHelper look good when rotating (otherwise edges go inside mesh)\r\n            this.materials.push(material);\r\n        }\r\n\r\n        window.addEventListener( 'resize', this.onWindowResize.bind(this), false );\r\n\r\n        this.animate();\r\n        this.redraw(0);\r\n    }\r\n\r\n    clearScene(){\r\n        while(this.scene.children.length > 0)\r\n            this.scene.remove(this.scene.children[0]);\r\n    }\r\n\r\n    onWindowResize(){\r\n        this.camera.aspect = window.innerWidth / window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight, false);\r\n        // this.controls.handleResize();    // not needed for OrbitControls\r\n        this.render();\r\n    }\r\n\r\n    animate(){\r\n        requestAnimationFrame(this.animate.bind(this));\r\n        TWEEN.update();\r\n        this.controls.update();\r\n        this.render();\r\n    }\r\n\r\n    render() {  // gets called from controls.change\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    createScene(step) {\r\n        let blockSize = this.colors.length * this.squareSize;\r\n        let margin = 100;\r\n        let offset = new THREE.Vector3(-1, 0, -1).multiplyScalar((blockSize + margin)/2 );\r\n        let layers = this.colors.length;\r\n        switch(step){\r\n            case 0:\r\n            {\r\n                let blockGeometry = new THREE.Geometry();\r\n                let blockGeomInit = false;\r\n                if(typeof this.blockGeometry === 'undefined'){\r\n                    blockGeomInit = true;\r\n                }\r\n                for(let i = 0; i < layers; i++){\r\n                    for(let j = 0; j < i + 1; j++){\r\n                        for(let k = 0; k < i + 1; k++){\r\n                            let cube = new THREE.Mesh(this.cubeGeometry, this.materials[i]);\r\n                            let pos = new THREE.Vector3(j * this.squareSize, (layers - 1 - i) * this.squareSize, k * this.squareSize);\r\n                            cube.position.set(pos.x, pos.y, pos.z );\r\n                            this.scene.add(cube);\r\n                            let edges = new THREE.EdgesHelper(cube, 0x000000);\r\n                            this.scene.add(edges);\r\n                            if(blockGeomInit){\r\n                                cube.updateMatrix();\r\n                                blockGeometry.merge(cube.geometry, cube.matrix);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(blockGeomInit){\r\n                    this.blockGeometry = blockGeometry;\r\n                    this.blockGeometry.center();\r\n                    this.blockGeometry.mergeVertices(); // removes duplicate vertices\r\n                }\r\n            }\r\n            break;\r\n            case 1:\r\n            {\r\n                let rotationTime = 3000, rotationDelay = 0;\r\n                for(let i = 0; i < 3; i++){\r\n                    let block = new THREE.Mesh(this.blockGeometry, this.materials[i]);\r\n                    let pos;\r\n                    if(i == 0){\r\n                        pos = new THREE.Vector3(0, 0, 0);\r\n                    }\r\n                    else if(i == 1){\r\n                        pos = new THREE.Vector3(blockSize + margin, 0, 0);\r\n                        let tween = new TWEEN.Tween(block.rotation)\r\n                            .to({ x: Math.PI/2, z: Math.PI/2}, rotationTime)\r\n                            .delay(rotationDelay)\r\n                            .start();\r\n                    }\r\n                    else{\r\n                        pos = new THREE.Vector3(0, 0, blockSize + margin);\r\n                        let tween = new TWEEN.Tween(block.rotation)\r\n                            .to({ x: -Math.PI / 2, y: Math.PI/2}, rotationTime)\r\n                            .delay(rotationDelay + rotationTime)\r\n                            .onComplete(() => {stepper.onForward();})\r\n                            .start();\r\n                    }\r\n                    pos.add(offset);\r\n                    block.position.set(pos.x, pos.y, pos.z );\r\n                    this.scene.add(block);\r\n                    let edges = new THREE.EdgesHelper(block, 0x000000);\r\n                    this.scene.add(edges);\r\n                }\r\n            }\r\n            break;\r\n            case 2:\r\n            case 3:\r\n            {\r\n                let translationTime = 2000;\r\n                for(let i = 0; i < 3; i++){\r\n                    let block = new THREE.Mesh(this.blockGeometry, this.materials[i]);\r\n                    let pos;\r\n                    if(i == 0){\r\n                        pos = new THREE.Vector3(0, 0, 0);\r\n                    }\r\n                    else if(i == 1){\r\n                        pos = new THREE.Vector3(blockSize + margin, 0, 0);\r\n                        block.rotation.x = Math.PI / 2;\r\n                        block.rotation.z = Math.PI / 2;\r\n                        if(step === 3){\r\n                            let tween = new TWEEN.Tween(pos)\r\n                                .to(new THREE.Vector3(this.squareSize, 0, 0), translationTime)\r\n                                .onUpdate(() => {\r\n                                    let p = pos.clone().add(offset);\r\n                                    block.position.set(p.x, p.y, p.z);\r\n                                })\r\n                                .onComplete(() => {stepper.onForward();})\r\n                                .start();\r\n                        }\r\n                    }\r\n                    else{\r\n                        pos = new THREE.Vector3(0, 0, blockSize + margin);\r\n                        block.rotation.x = -Math.PI / 2;\r\n                        block.rotation.y = Math.PI / 2;\r\n                    }\r\n                    pos.add(offset);\r\n                    block.position.set(pos.x, pos.y, pos.z );\r\n                    this.scene.add(block);\r\n                    let edges = new THREE.EdgesHelper(block, 0x000000);\r\n                    this.scene.add(edges);\r\n                }\r\n            }\r\n            break;\r\n            case 4:\r\n            case 5:\r\n            {\r\n                let translationTime = 2000;\r\n                for(let i = 0; i < 3; i++){\r\n                    let block = new THREE.Mesh(this.blockGeometry, this.materials[i]);\r\n                    let pos;\r\n                    if(i == 0){\r\n                        pos = new THREE.Vector3(0, 0, 0);\r\n                    }\r\n                    else if(i == 1){\r\n                        pos = new THREE.Vector3(this.squareSize, 0, 0);\r\n                        block.rotation.x = Math.PI / 2;\r\n                        block.rotation.z = Math.PI / 2;\r\n                    }\r\n                    else{\r\n                        pos = new THREE.Vector3(0, 0, blockSize + margin);\r\n                        block.rotation.x = -Math.PI / 2;\r\n                        block.rotation.y = Math.PI / 2;\r\n                        if(step === 5){\r\n                            let tweenA = new TWEEN.Tween(pos)\r\n                                .to(new THREE.Vector3(0, this.squareSize, blockSize + margin), translationTime/2)\r\n                                .onUpdate(() => {\r\n                                    let p = pos.clone().add(offset);\r\n                                    block.position.set(p.x, p.y, p.z);\r\n                                })\r\n                            let tweenB = new TWEEN.Tween(pos)\r\n                                .to(new THREE.Vector3(0, this.squareSize, 0), translationTime)\r\n                                .onUpdate(() => {\r\n                                    let p = pos.clone().add(offset);\r\n                                    block.position.set(p.x, p.y, p.z);\r\n                                })\r\n                                .onComplete(() => {stepper.onForward();});\r\n                            tweenA.chain(tweenB);\r\n                            tweenA.start();\r\n                        }\r\n                    }\r\n                    pos.add(offset);\r\n                    block.position.set(pos.x, pos.y, pos.z );\r\n                    this.scene.add(block);\r\n                    let edges = new THREE.EdgesHelper(block, 0x000000);\r\n                    this.scene.add(edges);\r\n                }\r\n            }\r\n            break;\r\n            case 6:\r\n            {\r\n                for(let i = 0; i < 3; i++){\r\n                    let block = new THREE.Mesh(this.blockGeometry, this.materials[i]);\r\n                    let pos;\r\n                    if(i == 0){\r\n                        pos = new THREE.Vector3(0, 0, 0);\r\n                    }\r\n                    else if(i == 1){\r\n                        pos = new THREE.Vector3(this.squareSize, 0, 0);\r\n                        block.rotation.x = Math.PI / 2;\r\n                        block.rotation.z = Math.PI / 2;\r\n                    }\r\n                    else{\r\n                        pos = new THREE.Vector3(0, this.squareSize, 0);\r\n                        block.rotation.x = -Math.PI / 2;\r\n                        block.rotation.y = Math.PI / 2;\r\n                    }\r\n                    pos.add(offset);\r\n                    block.position.set(pos.x, pos.y, pos.z );\r\n                    this.scene.add(block);\r\n                    let edges = new THREE.EdgesHelper(block, 0x000000);\r\n                    this.scene.add(edges);\r\n                }\r\n            }\r\n            break;\r\n            case 7:\r\n            case 8:\r\n            {\r\n                // build first two blocks\r\n                for(let i = 0; i < 2; i++){\r\n                    let block = new THREE.Mesh(this.blockGeometry, this.materials[i]);\r\n                    let pos;\r\n                    if(i == 0){\r\n                        pos = new THREE.Vector3(0, 0, 0);\r\n                    }\r\n                    else if(i == 1){\r\n                        pos = new THREE.Vector3(this.squareSize, 0, 0);\r\n                        block.rotation.x = Math.PI / 2;\r\n                        block.rotation.z = Math.PI / 2;\r\n                    }\r\n                    else{\r\n                        pos = new THREE.Vector3(0, this.squareSize, 0);\r\n                        block.rotation.x = -Math.PI / 2;\r\n                        block.rotation.y = Math.PI / 2;\r\n                    }\r\n                    pos.add(offset);\r\n                    block.position.set(pos.x, pos.y, pos.z );\r\n                    this.scene.add(block);\r\n                    let edges = new THREE.EdgesHelper(block, 0x000000);\r\n                    this.scene.add(edges);\r\n                }\r\n\r\n                // build bottom layers of third block\r\n                let offset2 = new THREE.Vector3(-layers * this.squareSize, -this.squareSize/2, -layers * this.squareSize);\r\n                for(let i = 0; i < layers; i++){\r\n                    for(let j = 0; j < i + 1; j++){\r\n                        for(let k = 1; k < i + 1; k++){\r\n                            let cube = new THREE.Mesh(this.cubeGeometry, this.materials[2]);\r\n                            let pos = new THREE.Vector3(j * this.squareSize, (layers - 1 - k) * this.squareSize, i * this.squareSize);\r\n                            pos.add(offset2);\r\n                            cube.position.set(pos.x, pos.y, pos.z );\r\n                            this.scene.add(cube);\r\n                            let edges = new THREE.EdgesHelper(cube, 0x000000);\r\n                            this.scene.add(edges);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Split top row of third block into 2 half/size cubes\r\n                if(typeof this.halfBlockGeometry === 'undefined'){\r\n                    let halfCubeGeometry = new THREE.BoxGeometry(this.squareSize, this.squareSize/2, this.squareSize);\r\n                    let halfBlockGeometry = new THREE.Geometry();\r\n                    for(let i = 0; i < layers; i++){\r\n                        for(let j = 0; j < i + 1; j++){\r\n                                let cube = new THREE.Mesh(halfCubeGeometry, this.materials[2]);\r\n                                let pos = new THREE.Vector3(j * this.squareSize, (layers - 1 - 0.25) * this.squareSize, i * this.squareSize);\r\n                                cube.position.set(pos.x, pos.y, pos.z );\r\n                                cube.updateMatrix();\r\n                                halfBlockGeometry.merge(cube.geometry, cube.matrix);\r\n                            }\r\n                        }\r\n                    this.halfBlockGeometry = halfBlockGeometry;\r\n                    this.halfBlockGeometry.center();\r\n                    this.halfBlockGeometry.mergeVertices(); // removes duplicate vertices\r\n                }\r\n                let upperSquares;\r\n\r\n                for(let i = 0; i < 2; i++){\r\n                    let pos = offset2.clone().add(new THREE.Vector3(1.5 * this.squareSize, (2.75 + i/2) * this.squareSize, 1.5 * this.squareSize));\r\n                    let block = new THREE.Mesh(this.halfBlockGeometry, this.materials[2]);\r\n                    block.position.set(pos.x, pos.y, pos.z );\r\n                    this.scene.add(block);\r\n                    let edges = new THREE.EdgesHelper(block, 0x000000);\r\n                    this.scene.add(edges);\r\n                    if(i === 1)\r\n                        upperSquares = block;\r\n                }\r\n                if(step === 7){\r\n                    let rotationTime = 2000, translationTime = 1000;\r\n                    let tweenA = new TWEEN.Tween(upperSquares.rotation)\r\n                                .to({ y: Math.PI}, rotationTime)\r\n                    let tweenB = new TWEEN.Tween(upperSquares.position)\r\n                                .to({ x: \"+\" + this.squareSize}, translationTime)\r\n                    let tweenC = new TWEEN.Tween(upperSquares.position)\r\n                                .to({ y: \"-\" + this.squareSize/2}, translationTime)\r\n                                .onComplete(() => {stepper.onForward();});\r\n                    tweenA.chain(tweenB);\r\n                    tweenB.chain(tweenC);\r\n                    tweenA.start();\r\n                }\r\n                else{\r\n                    upperSquares.rotation.y = Math.PI;\r\n                    let pos = upperSquares.position.clone().add(new THREE.Vector3(this.squareSize, -this.squareSize/2, 0));\r\n                    upperSquares.position.set(pos.x, pos.y, pos.z);\r\n                }\r\n\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    redraw(step = this.currentStep){\r\n        this.currentStep = step;\r\n\r\n        let _this = this;\r\n        this.clearScene();\r\n        this.createScene(this.currentStep);\r\n        this.render();  // render new scene\r\n    }\r\n\r\n    onStep(forward){\r\n        TWEEN.removeAll();\r\n        let ret = super.onStep(forward);\r\n        return ret;\r\n    }\r\n}\r\n\r\n// Tween.js\r\n// https://github.com/tweenjs/tween.js/blob/master/docs/user_guide.md"]}